FROM python:3.10 AS python-base
FROM python-base AS builder-base

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_DEFAULT_TIMEOUT=100 \
    AIOHTTP_NO_EXTENSIONS=1 \
    PYSETUP_PATH="/opt/pysetup" \
    VENV_PATH="/opt/pysetup/.venv" \
    DOCKER=true \
    GIT_PYTHON_REFRESH=quiet

RUN apt-get update && apt-get upgrade -y

RUN apt-get install --no-install-recommends -y \
    build-essential \
    curl \
    gcc \
    git \
    openssl \
    openssh-server \
    python3 \
    python3-dev \
    python3-pip \
    sqlite3 \
    zip \
    inotify-tools

RUN apt-get install --no-install-recommends -y \
    ffmpeg \
    libavcodec-dev \
    libavdevice-dev \
    libavformat-dev \
    libavutil-dev \
    libswscale-dev

RUN apt-get install --no-install-recommends -y \
    libcairo2 \
    libmagic1

RUN apt-get install --no-install-recommends -y wkhtmltopdf || true

RUN curl -sL https://deb.nodesource.com/setup_18.x -o nodesource_setup.sh && \
    bash nodesource_setup.sh && \
    apt-get install -y nodejs && \
    rm nodesource_setup.sh

RUN rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/* /tmp/*

WORKDIR /data
RUN mkdir -p /data/private /data/sessions /data/export/secret_files

RUN git clone https://github.com/coddrago/Heroku /data/Heroku

WORKDIR /data/Heroku

RUN git fetch && git checkout master && git pull

RUN pip install --no-warn-script-location --no-cache-dir -U -r requirements.txt

# –û—Å–Ω–æ–≤–Ω–æ–π entrypoint —Å–∫—Ä–∏–ø—Ç
RUN echo '#!/bin/bash\n\
set -e\n\
\n\
echo "üîÑ Heroku Auto Session Manager"\n\
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"\n\
\n\
# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Å—Å–∏–∏\n\
check_session() {\n\
    if [ -f "$1" ]; then\n\
        if sqlite3 "$1" "PRAGMA integrity_check;" 2>/dev/null | grep -q "ok"; then\n\
            return 0\n\
        fi\n\
    fi\n\
    return 1\n\
}\n\
\n\
# –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ–¥–Ω–æ–π —Å–µ—Å—Å–∏–∏\n\
save_single_session() {\n\
    local session_file="$1"\n\
    local filename=$(basename "$session_file")\n\
    \n\
    if check_session "$session_file"; then\n\
        # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ persistent storage\n\
        cp "$session_file" /data/sessions/\n\
        # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è Secret Files export\n\
        cp "$session_file" /data/export/secret_files/\n\
        # –°–æ–∑–¥–∞–Ω–∏–µ timestamp —Ñ–∞–π–ª–∞\n\
        date "+%Y-%m-%d %H:%M:%S" > "/data/sessions/${filename}.timestamp"\n\
        echo "‚úÖ Saved: $filename"\n\
        return 0\n\
    else\n\
        echo "‚ùå Invalid session: $filename"\n\
        return 1\n\
    fi\n\
}\n\
\n\
# –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —Å–µ—Å—Å–∏–π\n\
save_all_sessions() {\n\
    echo "üíæ Saving all sessions..."\n\
    local saved=0\n\
    \n\
    for session in /data/*.session; do\n\
        if [ -f "$session" ]; then\n\
            if save_single_session "$session"; then\n\
                ((saved++))\n\
            fi\n\
        fi\n\
    done\n\
    \n\
    if [ $saved -gt 0 ]; then\n\
        # –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞\n\
        cd /data/export\n\
        rm -f sessions_backup.zip\n\
        zip -q -r sessions_backup.zip secret_files/*.session 2>/dev/null || true\n\
        echo "üì¶ Saved $saved session(s) to archive"\n\
        echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"\n\
        echo "üì• Download command:"\n\
        echo "   docker cp heroku-userbot:/data/export/sessions_backup.zip ./"\n\
        echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"\n\
    fi\n\
}\n\
\n\
# –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–π\n\
load_saved_sessions() {\n\
    local loaded=0\n\
    \n\
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Secret Files (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)\n\
    if [ -d "/etc/secrets" ] && ls /etc/secrets/*.session 1> /dev/null 2>&1; then\n\
        echo "üìÅ Loading from Secret Files (/etc/secrets)..."\n\
        for session in /etc/secrets/*.session; do\n\
            filename=$(basename "$session")\n\
            if check_session "$session"; then\n\
                cp "$session" /data/\n\
                cp "$session" /data/sessions/  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–ø–∏—é\n\
                echo "   ‚úÖ Loaded: $filename"\n\
                ((loaded++))\n\
            else\n\
                echo "   ‚ö†Ô∏è Corrupted: $filename"\n\
            fi\n\
        done\n\
    fi\n\
    \n\
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ persistent storage\n\
    if [ -d "/data/sessions" ] && ls /data/sessions/*.session 1> /dev/null 2>&1; then\n\
        echo "üìÇ Loading from persistent storage..."\n\
        for session in /data/sessions/*.session; do\n\
            filename=$(basename "$session")\n\
            \n\
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞\n\
            if [ -f "/data/$filename" ]; then\n\
                echo "   ‚ÑπÔ∏è Already exists: $filename"\n\
                continue\n\
            fi\n\
            \n\
            if check_session "$session"; then\n\
                cp "$session" /data/\n\
                echo "   ‚úÖ Restored: $filename"\n\
                ((loaded++))\n\
            else\n\
                echo "   ‚ö†Ô∏è Corrupted: $filename"\n\
            fi\n\
        done\n\
    fi\n\
    \n\
    return $loaded\n\
}\n\
\n\
# –§—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö —Å–µ—Å—Å–∏–π –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏\n\
watch_sessions() {\n\
    echo "üëÅÔ∏è Starting session file monitor..."\n\
    \n\
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º inotifywait –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π\n\
    inotifywait -m -e create -e modify -e moved_to --format "%f" /data 2>/dev/null | \\\n\
    while read filename; do\n\
        if [[ "$filename" == *.session ]]; then\n\
            sleep 2  # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏\n\
            \n\
            session_path="/data/$filename"\n\
            if [ -f "$session_path" ]; then\n\
                echo "üÜï Detected new/updated session: $filename"\n\
                \n\
                if save_single_session "$session_path"; then\n\
                    echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"\n\
                    echo "‚úÖ SESSION SAVED SUCCESSFULLY!"\n\
                    echo ""\n\
                    echo "üì• Download for Secret Files:"\n\
                    echo "   docker cp heroku-userbot:/data/export/secret_files/$filename ./"\n\
                    echo ""\n\
                    echo "üì§ Upload to platform:"\n\
                    echo "   ‚Ä¢ Railway: Settings ‚Üí Variables ‚Üí Secret Files"\n\
                    echo "   ‚Ä¢ Render: Environment ‚Üí Secret Files"\n\
                    echo "   ‚Ä¢ Upload file: $filename"\n\
                    echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"\n\
                fi\n\
            fi\n\
        fi\n\
    done\n\
}\n\
\n\
# 1. –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–π\n\
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"\n\
load_saved_sessions\n\
loaded_count=$?\n\
\n\
# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è\n\
session_count=$(ls -1 /data/*.session 2>/dev/null | wc -l)\n\
\n\
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"\n\
if [ "$session_count" -gt 0 ]; then\n\
    echo "‚úÖ Active sessions: $session_count"\n\
    echo ""\n\
    for session in /data/*.session; do\n\
        if [ -f "$session" ]; then\n\
            filename=$(basename "$session")\n\
            size=$(du -h "$session" | cut -f1)\n\
            timestamp_file="/data/sessions/${filename}.timestamp"\n\
            \n\
            echo -n "   ‚Ä¢ $filename ($size)"\n\
            \n\
            if [ -f "$timestamp_file" ]; then\n\
                timestamp=$(cat "$timestamp_file")\n\
                echo " - saved: $timestamp"\n\
            else\n\
                echo ""\n\
            fi\n\
        fi\n\
    done\n\
    echo ""\n\
    echo "üí° Sessions are auto-saved every 5 minutes"\n\
    echo "üí° New sessions are detected instantly"\n\
else\n\
    echo "‚ö†Ô∏è No sessions found"\n\
    echo ""\n\
    echo "üìù To create a session:"\n\
    echo "   1. Open http://localhost:8080 in browser"\n\
    echo "   2. Complete Heroku authorization"\n\
    echo "   3. Session will be auto-saved"\n\
fi\n\
\n\
if [ -n "$MONGO_URI" ]; then\n\
    echo "üóÑÔ∏è MongoDB: Connected"\n\
fi\n\
\n\
# 3. –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö —Å–µ—Å—Å–∏–π –≤ —Ñ–æ–Ω–µ\n\
watch_sessions &\n\
WATCH_PID=$!\n\
\n\
# 4. –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ\n\
(\n\
    while true; do\n\
        sleep 300  # 5 –º–∏–Ω—É—Ç\n\
        echo "‚è∞ Auto-saving sessions..."\n\
        save_all_sessions > /dev/null 2>&1\n\
    done\n\
) &\n\
AUTOSAVE_PID=$!\n\
\n\
# 5. –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è\n\
cleanup() {\n\
    echo "\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"\n\
    echo "üõë Shutting down gracefully..."\n\
    \n\
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–Ω–æ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã\n\
    kill $WATCH_PID 2>/dev/null || true\n\
    kill $AUTOSAVE_PID 2>/dev/null || true\n\
    \n\
    # –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ\n\
    save_all_sessions\n\
    \n\
    echo "‚úÖ All sessions saved"\n\
    echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"\n\
    exit 0\n\
}\n\
\n\
trap cleanup SIGTERM SIGINT EXIT\n\
\n\
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"\n\
echo "üöÄ Starting Heroku userbot..."\n\
echo "üåê Web interface: http://localhost:8080"\n\
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"\n\
\n\
# –ó–∞–ø—É—Å–∫ Heroku\n\
exec "$@"' > /entrypoint.sh && chmod +x /entrypoint.sh

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —ç–∫—Å–ø–æ—Ä—Ç–∞
RUN echo '#!/bin/bash\n\
echo "üì§ Session Export Utility"\n\
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"\n\
\n\
if ! ls /data/*.session 1> /dev/null 2>&1; then\n\
    echo "‚ùå No sessions found!"\n\
    exit 1\n\
fi\n\
\n\
mkdir -p /data/export/secret_files\n\
count=0\n\
\n\
for session in /data/*.session; do\n\
    filename=$(basename "$session")\n\
    cp "$session" /data/export/secret_files/\n\
    echo "‚úÖ Exported: $filename"\n\
    ((count++))\n\
done\n\
\n\
cd /data/export\n\
zip -r sessions_backup.zip secret_files/*.session\n\
\n\
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"\n\
echo "‚úÖ Exported $count session(s)"\n\
echo ""\n\
echo "üì• Download archive:"\n\
echo "   docker cp heroku-userbot:/data/export/sessions_backup.zip ./"\n\
echo ""\n\
echo "üì• Download individual sessions:"\n\
for session in /data/export/secret_files/*.session; do\n\
    filename=$(basename "$session")\n\
    echo "   docker cp heroku-userbot:/data/export/secret_files/$filename ./"\n\
done\n\
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"' > /data/export_sessions.sh && chmod +x /data/export_sessions.sh

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç—É—Å–∞
RUN echo '#!/bin/bash\n\
echo "üìä Session Status"\n\
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"\n\
\n\
echo "üìÇ Active sessions in /data:"\n\
if ls /data/*.session 1> /dev/null 2>&1; then\n\
    for session in /data/*.session; do\n\
        filename=$(basename "$session")\n\
        size=$(du -h "$session" | cut -f1)\n\
        modified=$(stat -c "%y" "$session" | cut -d. -f1)\n\
        echo "   ‚úÖ $filename ($size) - modified: $modified"\n\
    done\n\
else\n\
    echo "   ‚ùå No active sessions"\n\
fi\n\
\n\
echo ""\n\
echo "üíæ Saved sessions in /data/sessions:"\n\
if ls /data/sessions/*.session 1> /dev/null 2>&1; then\n\
    for session in /data/sessions/*.session; do\n\
        filename=$(basename "$session")\n\
        size=$(du -h "$session" | cut -f1)\n\
        timestamp_file="${session}.timestamp"\n\
        if [ -f "$timestamp_file" ]; then\n\
            timestamp=$(cat "$timestamp_file")\n\
            echo "   ‚úÖ $filename ($size) - saved: $timestamp"\n\
        else\n\
            echo "   ‚úÖ $filename ($size)"\n\
        fi\n\
    done\n\
else\n\
    echo "   ‚ùå No saved sessions"\n\
fi\n\
\n\
echo ""\n\
echo "üì§ Exported sessions in /data/export/secret_files:"\n\
if ls /data/export/secret_files/*.session 1> /dev/null 2>&1; then\n\
    for session in /data/export/secret_files/*.session; do\n\
        filename=$(basename "$session")\n\
        size=$(du -h "$session" | cut -f1)\n\
        echo "   ‚úÖ $filename ($size)"\n\
    done\n\
else\n\
    echo "   ‚ùå No exported sessions"\n\
fi\n\
\n\
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"' > /data/session_status.sh && chmod +x /data/session_status.sh

# Volume –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è
VOLUME ["/data/sessions", "/data/export"]

EXPOSE 8080

ENTRYPOINT ["/entrypoint.sh"]
CMD ["python", "-m", "heroku", "--root"]
